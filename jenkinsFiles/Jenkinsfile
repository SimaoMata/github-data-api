pipeline {
    agent any

    environment {
        AWS_REGION = 'eu-west-1'
        AWS_ACCESS_KEY_ID = credentials('aws-access-key-id')
        AWS_SECRET_ACCESS_KEY = credentials('aws-secret-access-key')
    }

    stages {
        stage('Deploy ECS Fargate Service') {
            steps {
                script {
                    sh "aws cloudformation deploy --region ${AWS_REGION} --template-file ../cloudFormationScripts/ecs_deployment.yaml --stack-name EcsFargateStack --parameter-overrides ExecutionRoleArn=arn:aws:iam::123456789012:role/EcsExecutionRole TaskRoleArn=arn:aws:iam::123456789012:role/EcsTaskRole DockerImageUri=your-docker-image-uri LogGroupName=/ecs/quarkus-rest-service"
                }
            }
        }

        stage('Create API Gateway') {
            steps {
                script {
                    sh "aws cloudformation deploy --region ${AWS_REGION} --template-file ../cloudFormationScripts/api_gateway.yaml --stack-name ApiGatewayStack --parameter-overrides EcsServiceUri=arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/your-lambda-function-arn/invocations"
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline executed successfully!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
